//------------------------------------//
// #MIXINS
//------------------------------------//

/// Supported attributes for font-smoothing
@mixin font-smoothing {
	-webkit-font-smoothing: antialiased;
	-moz-osx-font-smoothing: grayscale;
}

/// Word-wrap mixin that breaks words that overflow width
/// Adds manual hyphening (not supported by Blink).
@mixin word-wrap() {
  // These are technically the same, but use all
  overflow-wrap: break-word;
  word-wrap: break-word;
  word-break: break-word;
  // Adds a hyphen where the line break is suggested, if supported (not in Blink, as of Feb. 2016)
  hyphens: manual;
}

/// Hides element but keeps it accessible for screen-readers
@mixin visibility-hidden() {
  position:absolute;
  left:-10000px;
  top:auto;
  width:1px;
  height:1px;
  overflow:hidden;
}

/// Removes default button styles
@mixin button-reset() {
  border: none;
  margin: 0;
  padding: 0;
  width: auto;
  overflow: visible;
  background: transparent;
  cursor: pointer;

  /* inherit font & color from ancestor */
  color: inherit;
  font: inherit;

  /* Normalize `line-height`. Cannot be changed from `normal` in Firefox 4+. */
  line-height: normal;

  /* Corrects font smoothing for webkit */
  -webkit-font-smoothing: inherit;
  -moz-osx-font-smoothing: inherit;

  /* Corrects inability to style clickable `input` types in iOS */
  -webkit-appearance: none;

  /* Remove excess padding and border in Firefox 4+ */
  &::-moz-focus-inner {
      border: 0;
      padding: 0;
  }
}

/// Resets default list styling
@mixin list-reset {
  list-style: none;
  padding: 0;
  margin-top: 0;
  margin-bottom: 0;
}

// For placeholder text in input fields
@mixin placeholder( $color,
                    $font-family: inherit,
                    $font-size: inherit,
                    $font-weight: inherit,
                    $font-style: normal,
                    $font-smoothing: true,
                    $line-height: inherit )
{
  $prefix-list: '::-webkit-input-placeholder', ':-moz-placeholder', '::-moz-placeholder', ':-ms-input-placeholder';

  @each $prefix in $prefix-list {
    &#{$prefix} {
      color: $color;
      font-family: $font-family;
      font-size: $font-size;
      font-weight: $font-weight;
      font-style: $font-style;
      line-height: $line-height;
      @if ($font-smoothing) { @include font-smoothing; }
    }
  }

}

/// Simplifies setting font-size and line height
/// @param {Map} $font - Map containing font definitions
/// @requires _media-queries.scss
@mixin set-font($font) {
  font-size: map-get-strict($font, 'size');
  line-height: map-get-strict($font, 'line-height');

  @if (map-has-key($font, 'size-medium')) {
    @include medium-up {
      font-size: map-get-strict($font, 'size-medium');
      line-height: map-get-strict($font, 'line-height-medium');
    }
  }

  @if (map-has-key($font, 'size-larger')) {
    @include large-up {
      font-size: map-get-strict($font, 'size-larger');
      line-height: map-get-strict($font, 'line-height-larger');
    }
  }
}

/// Constrain image size to set ratio
@mixin constrain-img-proportion($ratio-height-width: 1, $stretch-direction: height) {
  position: relative;
  overflow: hidden;
  width: 100%;
  height: 0;
  padding-bottom: $ratio-height-width * 100%;

  img,
  iframe,
  video {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    object-fit: cover;

    @if ($stretch-direction == height) {
      min-height: 100%;
      width: 100%;
    } @else {
      height: 100%;
      max-width: none;
      min-width: 100%;
      width: auto;
    }
  }

  iframe {
    object-fit: fill;
    width: 100%;
    height: 100%;
  }
}
